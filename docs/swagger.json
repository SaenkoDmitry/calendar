{
    "swagger": "2.0",
    "info": {
        "description": "calendar http server documentation",
        "title": "Calendar API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Dmitry Saenko",
            "url": "https://github.com/SaenkoDmitry",
            "email": "dmitryssaenko@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/health": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "service health info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthStatus"
                        }
                    }
                }
            }
        },
        "/meetings": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "create meeting info",
                "parameters": [
                    {
                        "description": "request body for creating meeting",
                        "name": "CreateMeetingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMeetingReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/meetings/suggest": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "get first time interval for meeting for group of users when all of them are free",
                "parameters": [
                    {
                        "description": "request body for creating meeting",
                        "name": "FindOptimalMeetingTimeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindOptimalMeetingTimeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/meetings/{meetingID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "get meeting info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meetingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create new user",
                "parameters": [
                    {
                        "description": "request body for creating user",
                        "name": "CreateUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/users/{userID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "change user time zone",
                "parameters": [
                    {
                        "description": "request body for changing user time zone",
                        "name": "CreateUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChangeZoneReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/users/{userID}/meetings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "get meetings by user and time interval",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meetingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        },
        "/users/{userID}/meetings/{meetingID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "change status of meeting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meetingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "example: requested | approved | declined | finished | canceled",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DataError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChangeZoneReq": {
            "type": "object",
            "required": [
                "zone"
            ],
            "properties": {
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.CreateMeetingReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "from": {
                    "description": "2022-01-02T15:00",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizer_id": {
                    "type": "integer"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "to": {
                    "description": "2022-01-02T16:00",
                    "type": "string"
                }
            }
        },
        "models.CreateUserReq": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "second_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "second_name": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.DataError": {
            "type": "object",
            "properties": {
                "data": {},
                "err": {
                    "$ref": "#/definitions/models.InternalError"
                }
            }
        },
        "models.FindOptimalMeetingTimeRequest": {
            "type": "object",
            "required": [
                "min_duration_in_minutes",
                "participants"
            ],
            "properties": {
                "min_duration_in_minutes": {
                    "type": "integer"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.HealthService": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.HealthStatus": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HealthService"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.InternalError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}